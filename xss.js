module.exports = function () {
	var express = require('express');
	var router = express.Router();


	router.get('/', async (req, res) => {
		/*
		 * Root page for /dApp. Function will retrieve wallet addresses. 
		 */
		var context = {};
		console.log('req.query');
		console.log(req.query.text);
		context.text = req.query.text;
		console.log('printing context');
		console.log(context);
		res.render('index.handlebars', context);
	});



	router.post('/', async (req, res) => {
		/*
		 * This Route will receive form inputs when the user clicks on 'translate'.  It will deduct funds from
		 * the buyer to the seller.  The seller is Jaq's web address.
		 */
		var context = {}
		context.jsscripts = ["verifyFunds.js", "translate.js"];

		/*Call Jaqs Microservice*/
		const jaqResponse = await callJaqService(req.body.text);
		let data = jaqResponse.data;

		context.word = {"word": data["word"]};
		delete data["word"];
		context.definition = data;

		context.buyer = {'buyer': req.body.buyer};

		//Get Buyer's starting balance
		context.buyer_start_bal = {"buyer_start_bal": await getBalance_Improved(req.body.buyer)};

		//Execute a transaction
		await writeTransaction_Improved(req.body.buyer, seller, context);

		//Get Buyer's ending balance
		context.buyer_end_bal = {"buyer_end_bal": await getBalance_Improved(req.body.buyer)};

		//Get Addressed
		context.Addresses = await getAddresses_Improved();

		//Dummy Translated Text
		//var text = "This is a dummy text, to be translated in the future";
		//context.translated = {'translated_text': text};
		//context.original = {'original_text': req.body.text};

		//console.log(context)

		res.render('dApp.handlebars', context);

	});

	return router;

}();
