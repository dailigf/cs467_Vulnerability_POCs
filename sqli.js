module.exports = function () {
	var express = require('express');
	var router = express.Router();

	function sqlTest(mysql, context, complete){
		/* 
		 * This handler is just used to test that we can query our database from the web application
		 */
		const sql = 'SELECT * FROM users;'
		mysql.pool.query(sql, function(error, results, fields){
			if(error){
				console.log(error);
				return
			}
			context.results = results;
			complete();
		})
	}
	
	async function sqlTest2(mysql, context, req){
		/*
		 * This is the vulnerable code, it does not use paramaterized queries, it simply concatenates the user's input to create a query
		 */
		var sql = 'SELECT users.userId, users.first_name, users.last_name FROM users WHERE users.first_name = \'' + req.body.first + '\';';
		context.sql = await mysql.pool.query(sql);
	}

	router.get('/', function(req, res){
		/*
		 * Root page for /sqli page
		 */
		var mysql = req.app.get('mysql');
		var context = {};
		var callbackcount = 0;
		sqlTest(mysql, context, complete);
		function complete(){
			callbackcount++;
			if(callbackcount >= 1){
				console.log(context);
			}
		}
	});

	router.get('/test', async function(req, res){
		/*
		 * get handler for the '/test' route, this will show the form
		 */
		var mysql = req.app.get('mysql');
		var context = {};
		res.render('sqli.handlebars')
		console.log('mysql test 2');
		console.log('printing context')
	})

	router.post('/test', async function(req, res){
		/*
		 * post handler for '/test', after user visits the get and submits info into form
		 * the form will post to this route
		 */
		var mysql = req.app.get('mysql');
		var context = {};
		console.log(req.body)
		await sqlTest2(mysql, context, req);
		console.log(context)
		res.render('sqli.handlebars', context)
	})

	return router;

}();
