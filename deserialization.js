module.exports = function () {
	var express = require('express');
	var cookieParser = require('cookie-parser');
	var escape = require('escape-html');
	var serialize = require('node-serialize');

	var router = express.Router();

	function myJSONParse(data){
		return eval(`(${data})`);
	}

	router.get('/', function(req, res){
		/*
		 * Root page for /insecure-deserialization page
		 */
		res.render('deserialization.handlebars')

	});

	router.post('/serialize', function(req, res){
		/*
		 * Root page for /sqli page
		 */
		//var data = req.query.test;
		//data = myJSONParse(data);
		//console.log(data);
		//res.send(data);
		var obj = req.body.text;
		console.log('payload:\n' + obj);

		//serialize the text first
		var serialized = serialize.serialize(obj);
		console.log('serialized:\n' + serialized);

		var context = {};
		context.serialized = serialized;

		var unserialized = serialize.unserialize(obj);

		console.log('unserialized:\n' + unserialized);
		//myJSONParse(req.body.text);
		//console.log((myJSONParse(context.object)));
		res.render('deserialization.handlebars', context);

	});

	router.post('/deserialize', function(req, res){
		/*
		 * Root page for /sqli page
		 */
		//var data = req.query.test;
		//data = myJSONParse(data);
		//console.log(data);
		//res.send(data);
		//var obj = req.body.text;
		//console.log(obj);

		////base64 decode the string
		//var obj_decoded = Buffer(obj, 'base64').toString();
		//console.log('decoded:\n' + obj_decoded);

		////serialize object
		//obj = serialize.unserialize(obj);
		//console.log(obj);

		var context = {};
		//context.unserialized = obj;
		////myJSONParse(req.body.text);
		////console.log((myJSONParse(context.object)));
		var obj = req.body.text;
		console.log(obj)
		var deserialized = serialize.unserialize(obj);
		console.log(deserialized);
		//console.log(deserialized);

		var concatenated_string = '';
		for(const[key, value] of Object.entries(deserialized)){
			concatenated_string += value;
		}
		context.unserialized = concatenated_string;
		res.render('deserialization.handlebars', context);

	});
	return router;

}();
